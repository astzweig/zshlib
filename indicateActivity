#!/usr/bin/env zsh
# vi: set expandtab ft=zsh tw=80 ts=2

function indicateActivity() {
  eval "`docopts -f -V - -h - : "$@" <<- USAGE
	Usage: $0 [options] -w FUNC [--] <args>...
	
	Show a spinner during run of FUNC if the output is connected to a terminal
	else print three dots and done or failed afterwards. All <args> are passed
	through to lop. You may not pass y/type or no-newline option to lop. Use this
	functions options to configure message type.
	
	Options:
	  -w FUNC, --work FUNC       The name of the function to call as workload.
	  -a STYLE, --active STYLE   hio message type during run of FUNC. [default: body:active]
	  -s STYLE, --success STYLE  hio message type if FUNC succeeds. [default: body:done]
	  -f STYLE, --failure STYLE  hio message type if FUNC fails. [default: body:failure]
	
	----
	$0 0.1.0
	Copyright (C) 2022 Rezart Qelibari, Astzweig GmbH & Co. KG
	License EUPL-1.2. There is NO WARRANTY, to the extent permitted by law.
	USAGE`"
  local arg result resultStyle
  for arg in ${args}; do
    [[ ${arg} = '-y' || ${arg} = --type ]] && return 10
  done

  lop --no-newline -y ${active} ${args}
  if test -t 1 -a "`lop getoutput`" = stdout; then
    showSpinner ${work} && resultStyle=${success}  || resultStyle=${failure}
    tput cr; tput el;
    lop -y ${resultStyle} ${args}
  else
    showSpinner ${work} && result=done  || result=failed
    lop -i ${result}
  fi
}

if [[ "${ZSH_EVAL_CONTEXT}" == toplevel ]]; then
  _DIR="${0:A:h}"
  for c in lop hio pf isTerminalBackgroundDark showSpinner; do
    whence $c > /dev/null || source "${_DIR}/$c"
  done
  indicateActivity "$@"
elif [[ "${ZSH_EVAL_CONTEXT}" == *loadautofunc ]]; then
  indicateActivity "$@"
fi

