#!/usr/bin/env zsh
# vi: set expandtab ft=zsh tw=80 ts=2

function indicateActivity() {
  eval "`docopts -f -V - -h - : "$@" <<- USAGE
	Usage: $0 [options] [--] <func> <msg>...
	
	Show a spinner during run of <func> if the output is connected to a terminal
	else print three dots and done or failed afterwards. Print <msg>s using lop
	with info level. <func> is a comma separated list of a command and further
	args.
	
	Options:
	  -a STYLE, --active STYLE   hio message type during run of FUNC. [default: body:active]
	  -s STYLE, --success STYLE  hio message type if FUNC succeeds. [default: body:done]
	  -f STYLE, --failure STYLE  hio message type if FUNC fails. [default: body:failure]
	
	----
	$0 0.1.0
	Copyright (C) 2022 Rezart Qelibari, Astzweig GmbH & Co. KG
	License EUPL-1.2. There is NO WARRANTY, to the extent permitted by law.
	USAGE`"
  local msgArgs result resultStyle resultMsg output
  test -z ${msg} && return 10

  msgArgs=(${${:--i}:^^msg})
  test -t 1 || msgArgs[-1]+=...

  output="`lop getoutput -- ${msgArgs}`"
  lop -n -y ${active} -- ${msgArgs}
  result=$?

  if [[ -t 1 && $output = stdout && $result -eq 0 ]]; then
    showSpinner ${func}
    result=$?
    [[ $result -eq 0 ]] && resultStyle=${success} || resultStyle=${failure}
    tput cr; tput el;
    lop -y ${resultStyle} -- ${msgArgs}
  elif [[ ! -t 1 && $output != syslog ]]; then
    showSpinner ${func}
    result=$?
    [[ $result -eq 0 ]] && resultMsg=done || resultMsg=failed
    lop -- -i ${resultMsg}
  else
    ${(s.,.)func}
    result=$?
  fi
  return $result
}

if [[ "${ZSH_EVAL_CONTEXT}" == toplevel ]]; then
  _DIR="${0:A:h}"
  for c in lop hio pf isTerminalBackgroundDark showSpinner; do
    whence $c > /dev/null || source "${_DIR}/$c"
  done
  indicateActivity "$@"
elif [[ "${ZSH_EVAL_CONTEXT}" == *loadautofunc ]]; then
  indicateActivity "$@"
fi

