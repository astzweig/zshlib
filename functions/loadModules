#!/usr/bin/env zsh
# vi: set expandtab ft=zsh tw=80 ts=2

function _zshlib_loadModules_filterModules() {
  if [ ${#module} -eq 0 ]; then
    modulesToKeep=(${allModules})
  else
    local mod pattern="^.*(${(j.|.)module})\$"
    modulesToKeep=()
    for mod in ${allModules}; do
      local found=false
      [[ ${mod} =~ ${pattern} ]] && found=true
      if [ "${inverse}" != true -a "${found}" = true ]; then
        modulesToKeep+=(${mod})
      elif [ "${inverse}" = true -a "${found}" = false ]; then
        modulesToKeep+=(${mod})
      fi
    done
  fi
}

function _zshlib_loadModules_loadAllModules() {
  [ "${#modpath}" -le 0 ] && modpath=('./modules')
  [ -n "${pattern}" ] && pattern=(-iname "${pattern}")
  allModules=(${(f)"$(find ${modpath} -type f ${pattern} -perm +u=x -maxdepth 1 2> /dev/null | sort -n)"})
}

function loadModules() {
  eval "`docopts -f -V - -h - : "$@" <<- USAGE
	Usage: $0 [options] [-m PATH]... [<module>...]
	
	Look for modules in all module search paths, filter them and print the remaining
	modules to stdout. If no module search path is given but a folder named modules
	exists in the current working directory, that is used instead. If any <module>
	arg is given, retrieve only modules that either match any given <module> or
	whose path ends like any of the given <module>.
	
	Options:
	  -i, --inverse                  Exclude the given <module> instead.
	  -p PATTERN, --pattern PATTERN  A shell pattern to match module names that
	                                 go into the complete set. All other operations
	                                 use that as the basis. Every executable file
	                                 is included by default.
	  -m PATH, --modpath PATH        Include PATH in the module search path.
	  -v VARNAME, --varname VARNAME  Put the modules into parameter VARNAME as array
	                                 elements instead of printing to stdout.
	----
	$0 0.1.0
	Copyright (C) 2022 Rezart Qelibari, Astzweig GmbH & Co. KG
	License EUPL-1.2. There is NO WARRANTY, to the extent permitted by law.
	USAGE`"
  local allModules=() modulesToKeep=()
  _zshlib_loadModules_loadAllModules
  _zshlib_loadModules_filterModules
  [ -n "${varname}" ] && set +A ${varname} "${modulesToKeep[@]}" || printf '%s\n' "${modulesToKeep[@]}"
}

if [[ "${ZSH_EVAL_CONTEXT}" == toplevel || "${ZSH_EVAL_CONTEXT}" == *loadautofunc ]]; then
  loadModules "$@"
fi
